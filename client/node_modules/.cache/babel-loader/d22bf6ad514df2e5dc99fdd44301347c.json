{"ast":null,"code":"var _jsxFileName = \"/Users/tiffanyshown/Desktop/GIT/Working/Project-3/client/src/components/Map/Map.js\";\nimport React from \"react\";\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport \"./Map.css\";\nvar libraries = [\"places\"];\nvar mapContainerStyle = {\n  width: \"500px\",\n  height: \"500px\"\n};\nvar options = {\n  disableDefaultUI: true,\n  zoomControl: true\n};\nexport default function Map(props) {\n  var _this = this;\n\n  console.log(\"Map -> props\", props);\n\n  var _useLoadScript = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n    libraries\n  }),\n      isLoaded = _useLoadScript.isLoaded,\n      loadError = _useLoadScript.loadError;\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Maps...\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: 12,\n    center: props.center,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, props.businesses.map(function (business) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: business._id,\n      position: {\n        lat: parseFloat(business.lat),\n        lng: parseFloat(business.lng)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["/Users/tiffanyshown/Desktop/GIT/Working/Project-3/client/src/components/Map/Map.js"],"names":["React","GoogleMap","useLoadScript","Marker","InfoWindow","libraries","mapContainerStyle","width","height","options","disableDefaultUI","zoomControl","Map","props","console","log","googleMapsApiKey","process","env","REACT_APP_GOOGLE_API_KEY","isLoaded","loadError","center","businesses","map","business","_id","lat","parseFloat","lng"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,MAHF,EAIEC,UAJF,QAKO,wBALP;AAMA,OAAO,WAAP;AAEA,IAAMC,SAAS,GAAG,CAAC,QAAD,CAAlB;AACA,IAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,OADiB;AAExBC,EAAAA,MAAM,EAAE;AAFgB,CAA1B;AAKA,IAAMC,OAAO,GAAG;AACdC,EAAAA,gBAAgB,EAAE,IADJ;AAEdC,EAAAA,WAAW,EAAE;AAFC,CAAhB;AAKA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,KAA5B;;AADiC,uBAEDX,aAAa,CAAC;AAC5Cc,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,wBADc;AAE5Cd,IAAAA;AAF4C,GAAD,CAFZ;AAAA,MAEzBe,QAFyB,kBAEzBA,QAFyB;AAAA,MAEfC,SAFe,kBAEfA,SAFe;;AAOjC,MAAIA,SAAJ,EAAe,OAAO,oBAAP;AACf,MAAI,CAACD,QAAL,EAAe,OAAO,iBAAP;AAEf,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,iBAAiB,EAAEd,iBADrB;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,MAAM,EAAEO,KAAK,CAACS,MAHhB;AAIE,IAAA,OAAO,EAAEb,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGI,KAAK,CAACU,UAAN,CAAiBC,GAAjB,CAAqB,UAACC,QAAD;AAAA,wBACpB,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,QAAQ,CAACC,GADhB;AAEE,MAAA,QAAQ,EAAE;AACRC,QAAAA,GAAG,EAAEC,UAAU,CAACH,QAAQ,CAACE,GAAV,CADP;AAERE,QAAAA,GAAG,EAAED,UAAU,CAACH,QAAQ,CAACI,GAAV;AAFP,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB;AAAA,GAArB,CANH,CADF,CADF;AAoBD","sourcesContent":["import React from \"react\";\nimport {\n  GoogleMap,\n  useLoadScript,\n  Marker,\n  InfoWindow,\n} from \"@react-google-maps/api\";\nimport \"./Map.css\";\n\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  width: \"500px\",\n  height: \"500px\",\n};\n\nconst options = {\n  disableDefaultUI: true,\n  zoomControl: true,\n};\n\nexport default function Map(props) {\n  console.log(\"Map -> props\", props);\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n    libraries,\n  });\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Maps...\";\n\n  return (\n    <div>\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        zoom={12}\n        center={props.center}\n        options={options}\n      >\n        {props.businesses.map((business) => (\n          <Marker\n            key={business._id}\n            position={{\n              lat: parseFloat(business.lat),\n              lng: parseFloat(business.lng),\n            }}\n          />\n        ))}\n      </GoogleMap>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}