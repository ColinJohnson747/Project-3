{"ast":null,"code":"import _objectSpread from \"/Users/tiffanyshown/Desktop/GIT/Working/Project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/tiffanyshown/Desktop/GIT/Working/Project-3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/tiffanyshown/Desktop/GIT/Working/Project-3/client/src/pages/Books/Books.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Card } from \"../../components/Card\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport API from \"../../utils/API\";\n\nfunction Books() {\n  // Setting our component's initial state\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        books = _useState2[0],\n        setBooks = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formObject = _useState4[0],\n        setFormObject = _useState4[1];\n\n  const formEl = useRef(null); // Load all books and store them with setBooks\n\n  useEffect(() => {\n    loadBooks();\n  }, []); // Loads all books and sets them to books\n\n  function loadBooks() {\n    API.getBooks().then(res => {\n      // console.log(res.data.books);\n      setBooks(res.data.books);\n    }).catch(err => console.log(err));\n  }\n\n  ; // Deletes a book from the database with a given id, then reloads books from the db\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(res => loadBooks()).catch(err => console.log(err));\n  } // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setFormObject(_objectSpread(_objectSpread({}, formObject), {}, {\n      [name]: value\n    }));\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (formObject.title && formObject.author) {\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis\n      }).then(res => {\n        formEl.current.reset();\n        loadBooks();\n      }).catch(err => console.log(err));\n    }\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"What Books Should I Read?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    ref: formEl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"title\",\n    placeholder: \"Title (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"author\",\n    placeholder: \"Author (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: handleInputChange,\n    name: \"synopsis\",\n    placeholder: \"Synopsis (Optional)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !(formObject.author && formObject.title),\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Submit Book\")))), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-6 sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    title: \"Books On My List\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, books.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, books.map(book => /*#__PURE__*/React.createElement(ListItem, {\n    key: book._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/books/\" + book._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 25\n    }\n  }, book.title, \" by \", book.author)), /*#__PURE__*/React.createElement(DeleteBtn, {\n    onClick: () => deleteBook(book._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 23\n    }\n  })))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \"No Results to Display\")))));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/tiffanyshown/Desktop/GIT/Working/Project-3/client/src/pages/Books/Books.js"],"names":["React","useState","useEffect","useRef","Link","Col","Row","Container","List","ListItem","Card","Input","TextArea","FormBtn","DeleteBtn","API","Books","books","setBooks","formObject","setFormObject","formEl","loadBooks","getBooks","then","res","data","catch","err","console","log","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","title","author","saveBook","synopsis","current","reset","length","map","book","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Card } from \"../../components/Card\";\nimport { Input, TextArea, FormBtn } from \"../../components/Form\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport API from \"../../utils/API\";\n\nfunction Books() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([]);\n  const [formObject, setFormObject] = useState({});\n  const formEl = useRef(null);\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadBooks();\n  }, []);\n\n  // Loads all books and sets them to books\n  function loadBooks() {\n    API.getBooks()\n      .then(res => {\n        // console.log(res.data.books);\n        setBooks(res.data.books);\n      })\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook(id) {\n    API.deleteBook(id)\n      .then(res => loadBooks())\n      .catch(err => console.log(err));\n  }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value})\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (formObject.title && formObject.author) {\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis\n      })\n        .then(res => {\n          formEl.current.reset();\n          loadBooks();\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Card title=\"What Books Should I Read?\">\n              <form ref={formEl}>\n                <Input\n                  onChange={handleInputChange}\n                  name=\"title\"\n                  placeholder=\"Title (required)\"\n                />\n                <Input\n                  onChange={handleInputChange}\n                  name=\"author\"\n                  placeholder=\"Author (required)\"\n                />\n                <TextArea\n                  onChange={handleInputChange}\n                  name=\"synopsis\"\n                  placeholder=\"Synopsis (Optional)\"\n                />\n                <FormBtn\n                  disabled={!(formObject.author && formObject.title)}\n                  onClick={handleFormSubmit}\n                >\n                  Submit Book\n                </FormBtn>\n              </form>\n            </Card>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Card title=\"Books On My List\">\n              {books.length ? (\n                <List>\n                  {books.map(book => (\n                    <ListItem key={book._id}>\n                      <Link to={\"/books/\" + book._id}>\n                        <strong>\n                          {book.title} by {book.author}\n                        </strong>\n                      </Link>\n                      <DeleteBtn onClick={() => deleteBook(book._id)} />\n                    </ListItem>\n                  ))}\n                </List>\n              ) : (\n                <h3>No Results to Display</h3>\n              )}\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}